{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@utility-point/ReactGT/webpack/universalModuleDefinition","webpack://@utility-point/ReactGT/./src/CloseButton.tsx","webpack://@utility-point/ReactGT/./src/FadeIn.tsx","webpack://@utility-point/ReactGT/./src/Highlight.tsx","webpack://@utility-point/ReactGT/./src/Hover.tsx","webpack://@utility-point/ReactGT/./src/Icons.tsx","webpack://@utility-point/ReactGT/./src/LIB/calculateModalPosition.ts","webpack://@utility-point/ReactGT/./src/Modal.tsx","webpack://@utility-point/ReactGT/./src/PageNumber.tsx","webpack://@utility-point/ReactGT/./src/ReactGT.tsx","webpack://@utility-point/ReactGT/./src/Step.tsx","webpack://@utility-point/ReactGT/./src/index.ts","webpack://@utility-point/ReactGT/./src/pageSelector.tsx","webpack://@utility-point/ReactGT/external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"React\",\"root\":\"React\"}","webpack://@utility-point/ReactGT/webpack/bootstrap","webpack://@utility-point/ReactGT/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@utility-point/ReactGT\", [\"React\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@utility-point/ReactGT\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"@utility-point/ReactGT\"] = factory(root[\"React\"]);\n})(global, function(__WEBPACK_EXTERNAL_MODULE__798__) {\nreturn ","import React from 'react';\nimport Hover from './Hover';\nimport { Close } from './Icons';\n\nconst CloseButton = ({ close }: { close: (event: React.MouseEvent) => void }) => (\n    <button\n        type=\"button\"\n        onClick={close}\n        style={{\n            backgroundColor: 'transparent',\n            border: 'none',\n            color: '#757575',\n            cursor: 'pointer',\n            position: 'absolute',\n            top: '12px',\n            right: '15px',\n        }}\n    >\n        <Hover style={{ color: '#212121' }}>\n            <Close />\n        </Hover>\n    </button>\n);\n\nexport default React.memo(CloseButton);\n","import React, { useState, useEffect } from 'react';\n\nconst FadeIn = ({ children, style }: { children?: JSX.Element; style?: React.CSSProperties }) => {\n    const [hidden, setHidden] = useState(true);\n    useEffect(() => {\n        setTimeout(() => {\n            setHidden(false);\n        }, 0);\n    }, []);\n    return (\n        <div\n            style={{\n                ...style,\n                transition: style?.transition\n                    ? `${style.transition}, opacity 0.4s ease`\n                    : `opacity 0.4s ease`,\n                opacity: hidden ? 0 : 1,\n            }}\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default React.memo(FadeIn);\n","import React from 'react';\nimport { useRef } from 'react';\nimport FadeIn from './FadeIn';\n\nconst speed = '0.4';\n\ntype ArrowProps = { x: number; y: number; rotation: number; scrollToElement: () => void };\nconst Arrow = ({ x, y, rotation, scrollToElement }: ArrowProps) => {\n    const ref = useRef(undefined as SVGPathElement);\n    const { height, width, top, bottom } = ref.current?.getBoundingClientRect() ?? {};\n    return (\n        <>\n            <div\n                onClick={scrollToElement}\n                style={{\n                    cursor: 'pointer',\n                    position: 'fixed',\n                    zIndex: 999998,\n                    height,\n                    width,\n                    top,\n                    bottom,\n                }}\n            />\n            <svg\n                width=\"1000vw\"\n                height=\"1000vh\"\n                background-color=\"red\"\n                style={{\n                    left: 0,\n                    right: 0,\n                    position: 'fixed',\n                    transition: `transform ${speed}s ease, height ${speed}s ease, width ${speed}s ease`,\n                    pointerEvents: 'none',\n                }}\n            >\n                <defs>\n                    <mask id=\"hole\">\n                        <rect width=\"100%\" height=\"100%\" fill=\"rgba(255, 255, 255, .8)\" />\n                        <path\n                            ref={ref}\n                            x=\"50\"\n                            transform={`rotate(${rotation} 50 50), translate(${y} ${x}), scale(5 5)`}\n                            transform-origin=\"4 4\"\n                            d=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n                        />\n                    </mask>\n                </defs>\n\n                <rect id=\"donut\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" mask=\"url(#hole)\" />\n            </svg>\n        </>\n    );\n};\n\ntype HighLightProps = { boundaries: DOMRect; scrollToElement: () => void };\nconst Highlight = ({\n    boundaries: { top, left, height, width },\n    scrollToElement,\n}: HighLightProps) => (\n    <FadeIn style={{ zIndex: 999997, position: 'absolute' }}>\n        {(() => {\n            if (top < -height) {\n                return (\n                    <Arrow\n                        scrollToElement={scrollToElement}\n                        x={-(left + width / 2 - 50)}\n                        y={0}\n                        rotation={90}\n                    />\n                );\n            }\n            if (top > window.innerHeight - 10) {\n                return (\n                    <Arrow\n                        scrollToElement={scrollToElement}\n                        x={left + width / 2 - 50}\n                        y={-(window.innerHeight - 120)}\n                        rotation={270}\n                    />\n                );\n            }\n            if (left > window.innerWidth - 10) {\n                return (\n                    <Arrow\n                        scrollToElement={scrollToElement}\n                        x={-(top + height / 2 - 65)}\n                        y={-(window.innerWidth - 120)}\n                        rotation={180}\n                    />\n                );\n            }\n            if (left < -width) {\n                return (\n                    <Arrow\n                        scrollToElement={scrollToElement}\n                        x={top + height / 2 - 50}\n                        y={0}\n                        rotation={0}\n                    />\n                );\n            }\n            return (\n                <div\n                    style={{\n                        left: 0,\n                        right: 0,\n                        transform: `translate(${left - 10}px, ${top - 10}px)`,\n                        position: 'fixed',\n                        width: `${width + 20}px`,\n                        height: `${height + 20}px`,\n                        borderRadius: '8px',\n                        boxShadow: '0 0 0 calc(200vh + 200vw) rgba(0, 0, 0, .8)',\n                        transition: `transform ${speed}s ease, height ${speed}s ease, width ${speed}s ease`,\n                    }}\n                />\n            );\n        })()}\n    </FadeIn>\n);\n\nexport default React.memo(Highlight);\n","import React from 'react';\nimport { useState } from 'react';\n\nconst Hover = ({ style, children }: { style: React.CSSProperties; children?: React.ReactNode }) => {\n    const [isHovering, setIsHovering] = useState(false);\n    return (\n        <div\n            style={isHovering ? style : undefined}\n            onMouseEnter={() => setIsHovering(true)}\n            onMouseLeave={() => setIsHovering(false)}\n        >\n            {children}\n        </div>\n    );\n};\nexport default React.memo(Hover);\n","import React from 'react';\n\nconst styles: React.CSSProperties = {\n    fill: 'currentColor',\n    width: '1em',\n    height: '1em',\n    display: 'inline-block',\n    fontSize: '1.5rem',\n    transition: 'fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n    flexShrink: 0,\n    userSelect: 'none',\n};\n\nconst Icon = ({ path }: { path: string }) => (\n    <svg style={styles}>\n        <path d={path} />\n    </svg>\n);\n\nexport const LeftArrow = () => (\n    <Icon path=\"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\" />\n);\n\nexport const RightArrow = () => (\n    <Icon path=\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\" />\n);\n\nexport const Close = () => (\n    <Icon path=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n);\n","import { Position } from '../types';\n\nconst calculateModalPosition = (\n    { top, left, right, width, height, bottom }: DOMRect,\n    modalHeight: number,\n): Position => {\n    const result: Position = {};\n    const { clientWidth: docWidth, clientHeight: docHeight } = document.documentElement;\n\n    // calculate the size of the margins around the element (space between the element and adge of screen)\n    const leftMargin = left - 10;\n    const rightMargin = docWidth - (width + left + 10);\n    const topMargin = top - 10;\n    const bottomMargin = docHeight - bottom;\n\n    result.width = docWidth < 350 ? docWidth - 20 : 330;\n    result.height = modalHeight;\n\n    const horizontalAlign = () => {\n        if (topMargin > bottomMargin) {\n            // align bottom of modal with bottom of element\n            // this is because the top margin is bigger than the bottom margin giving the modal more room to grow\n            result.bottom = bottom + 10;\n        } else {\n            // align top of modal with top of element\n            result.top = topMargin;\n        }\n    };\n    const vertialAlign = () => {\n        // if left margin is bigger than right align with left, unless the space is to narrow then alight\n        if (leftMargin > rightMargin) {\n            if (left + width < result.width + 10) {\n                result.left = 10;\n            } else {\n                result.right = docWidth - right - 10;\n            }\n        } else if (docWidth - left < result.width + 10) {\n            result.right = 10;\n        } else {\n            result.left = left - 10;\n        }\n    };\n\n    // Add modal to left side if there is more space on the left than the right and enough space to fit the modal\n    if (leftMargin > rightMargin && leftMargin >= result.width + 20) {\n        // set modals right border to align with elements left border with 10px gap\n        result.right = docWidth - left + 20;\n        horizontalAlign();\n    }\n    // Add Modal to Right side if there is enough space\n    else if (rightMargin >= result.width + 20) {\n        // Set modals left border to align with Elements right border with 10px gap\n        result.left = left + width + 20;\n        horizontalAlign();\n    }\n    // Add modal above element if top margin is bigger than the bottom margin and there is enough space\n    else if (topMargin > bottomMargin && topMargin > modalHeight + 20) {\n        // align bottom of modal with top of element\n        result.bottom = top - 20;\n        vertialAlign();\n    }\n    // Add modal under element if there is enough space\n    else if (bottomMargin > modalHeight + 20) {\n        // align top of result with bottom of element\n        result.top = top + height + 20;\n        vertialAlign();\n    }\n    // If the modal doesnt fit anywhere else put the modal in the center of the element\n    else {\n        result.top = top + height / 3;\n        result.left = left + 10 + width / 2 - result.width / 2;\n    }\n    // make sticky\n    if (result.top < 0) result.top = 0;\n    if (result.bottom > window.innerHeight) result.bottom = window.innerHeight - 20;\n    if (result.left < 0) result.left = 0;\n    if (result.right > window.innerWidth) result.right = window.innerWidth - 20;\n    return result;\n};\n\nexport default calculateModalPosition;\n","import React, { useMemo, useRef } from 'react';\nimport CloseButton from './CloseButton';\nimport FadeIn from './FadeIn';\nimport calculateModalPosition from './LIB/calculateModalPosition';\nimport PageNumber from './PageNumber';\nimport PageSelector from './pageSelector';\n\nconst speed = '0.4';\n\nconst Modal = ({\n    boundaries,\n    stepIndex,\n    changeStep,\n    allSteps,\n    close,\n    renderedContent,\n}: {\n    boundaries: DOMRect;\n    stepIndex: number;\n    changeStep: (index: number) => void;\n    allSteps: number[];\n    close: (event: React.MouseEvent) => void;\n    renderedContent: any;\n}) => {\n    const ref = useRef(undefined as HTMLDivElement);\n    const content = useMemo(\n        () => (\n            <div ref={ref}>\n                {renderedContent}\n                <PageSelector stepIndex={stepIndex} changeStep={changeStep} allSteps={allSteps} />\n            </div>\n        ),\n        [allSteps, changeStep, renderedContent, stepIndex],\n    );\n    const position = useMemo(\n        () => calculateModalPosition(boundaries, (ref?.current?.clientHeight ?? 0) + 48),\n        [boundaries],\n    );\n    return (\n        <FadeIn\n            style={{\n                transition: `transform ${speed}s ease, height ${speed}s ease, width ${speed}s ease`,\n                transform: `translate(${\n                    position.right\n                        ? `calc(${document.body.clientWidth - position.right}px - 100%)`\n                        : `${position.left}px`\n                }, ${position.bottom ? `calc(${position.bottom}px - 100%)` : `${position.top}px`})`,\n                width: `${position.width}px`,\n                height: `${position.height}px`,\n                maxWidth: '330px',\n                minHeight: '48px',\n                position: 'fixed',\n                backgroundColor: '#fff',\n                left: 0,\n                top: 0,\n                borderRadius: '8px',\n                zIndex: 999999,\n                boxShadow: 'rgb(0 0 0 / 30%) 0px 0.5em 3em',\n            }}\n        >\n            <div\n                style={{\n                    overflow: 'hidden',\n                    height: '100%',\n                    padding: `24px ${position.width / 11}px`,\n                }}\n            >\n                <PageNumber selectedIndex={stepIndex} />\n                <CloseButton close={close} />\n                {content}\n            </div>\n        </FadeIn>\n    );\n};\n\nexport default React.memo(Modal);\n","import React from 'react';\n\nconst PageNumber = ({ selectedIndex }: { selectedIndex: number }) => (\n    <div\n        style={{\n            backgroundColor: '#00c19f',\n            color: 'white',\n            boxShadow: 'rgb(0 0 0 / 30%) 0px 0.5em 3em',\n            width: '40px',\n            height: '40px',\n            borderRadius: '50%',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            position: 'absolute',\n            left: '-10px',\n            top: '-10px',\n        }}\n    >\n        {selectedIndex + 1}\n    </div>\n);\n\nexport default React.memo(PageNumber);\n","import React, { useMemo, useCallback, useState } from 'react';\nimport Step from './Step';\nimport { ReactGTStep } from './types';\n\nconst ReactGT = ({\n    open,\n    onClose,\n    steps,\n    openAt = 0,\n}: {\n    open: boolean;\n    onClose: () => void;\n    openAt?: number;\n    steps: ReactGTStep[];\n}) => {\n    const [currentIndex, setCurrentIndex] = useState(openAt);\n    const allSteps = useMemo(() => steps.map((_, i) => i), [steps]);\n    const close = useCallback(\n        (event: React.MouseEvent) => {\n            event.stopPropagation();\n            onClose();\n            setCurrentIndex(openAt);\n        },\n        [onClose, openAt],\n    );\n    if (!open) return null;\n\n    return (\n        <>\n            {\n                // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n                <div\n                    style={{\n                        position: 'fixed',\n                        top: 0,\n                        right: 0,\n                        left: 0,\n                        bottom: 0,\n                        zIndex: 999996,\n                    }}\n                    onClick={close}\n                />\n            }\n            <Step\n                {...steps[currentIndex]}\n                stepIndex={currentIndex}\n                changeStep={index => setCurrentIndex(index)}\n                allSteps={allSteps}\n                close={close}\n            />\n        </>\n    );\n};\n\nexport default React.memo(ReactGT);\n","import React, { useMemo, useState, useEffect } from 'react';\nimport { ReactGTStep } from './types';\nimport Highlight from './Highlight';\nimport Modal from './Modal';\nimport { useCallback } from 'react';\n\nconst $ = (query: string) => document.querySelector(query);\n\nconst scrollOptions = { behavior: 'smooth', block: 'center' } as ScrollIntoViewOptions;\n\ntype Props = Partial<ReactGTStep> & {\n    stepIndex: number;\n    changeStep: (index: number) => void;\n    allSteps: number[];\n    close: (event: React.MouseEvent) => void;\n};\n\nconst Step = React.memo(\n    ({\n        element,\n        stepIndex,\n        changeStep,\n        allSteps,\n        close,\n        renderedContent,\n    }: Props & { element: Element; renderedContent: any }) => {\n        const [boundaries, setBoundaries] = useState(() => element.getBoundingClientRect());\n        const adjustBoundaries = useCallback(\n            () => setBoundaries(element.getBoundingClientRect()),\n            [element],\n        );\n        const scrollToElement = useCallback(() => {\n            element.scrollIntoView(scrollOptions);\n            adjustBoundaries();\n        }, [element]);\n        useEffect(() => {\n            scrollToElement();\n            window.addEventListener('resize', adjustBoundaries);\n            window.addEventListener('scroll', adjustBoundaries);\n\n            const interval = setInterval(() => window.dispatchEvent(new Event('resize')), 250);\n\n            const timeout = setTimeout(() => clearInterval(interval), 3000);\n            return () => {\n                clearInterval(interval);\n                clearTimeout(timeout);\n                window.removeEventListener('resize', adjustBoundaries);\n                window.removeEventListener('scroll', adjustBoundaries);\n            };\n        }, [element]);\n        return (\n            <>\n                <Highlight scrollToElement={scrollToElement} boundaries={boundaries} />\n                <Modal\n                    boundaries={boundaries}\n                    renderedContent={renderedContent}\n                    stepIndex={stepIndex}\n                    changeStep={changeStep}\n                    allSteps={allSteps}\n                    close={close}\n                />\n            </>\n        );\n    },\n);\n\nconst ElementFinder = ({ selector, content: Content, stepIndex, ...props }: Props) => {\n    const [failedCount, setFailedCount] = useState(0);\n    const renderedContent = <Content step={stepIndex} />;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const element = useMemo(() => $(selector), [selector, failedCount]);\n    if (element == null && failedCount < 25) {\n        setTimeout(() => setFailedCount(failedCount + 1), 100);\n    }\n    if (failedCount > 0) {\n        setFailedCount(0);\n    }\n    if (!process.env.NODE_ENV || (process.env.NODE_ENV === 'development' && failedCount == 25)) {\n        // eslint-disable-next-line no-console\n        console.warn(\n            `ReactGT: Failed to find element using selector '${selector}', falling back to documents body element.`,\n        );\n    }\n    return (\n        <Step {...{ ...props, element: element ?? document.body, renderedContent, stepIndex }} />\n    );\n};\n\nexport default React.memo(ElementFinder);\n","export { default } from './ReactGT';\n\nexport * from './types';\n","import React, { MouseEventHandler } from 'react';\nimport Hover from './Hover';\nimport { LeftArrow, RightArrow } from './Icons';\n\nconst DotButton = ({ selected, onClick }: { selected: boolean; onClick: MouseEventHandler }) => (\n    <button\n        type=\"button\"\n        style={{\n            backgroundColor: 'inherit',\n            border: 'none',\n            cursor: selected ? 'default' : 'pointer',\n            display: 'contents',\n        }}\n        onClick={onClick}\n    >\n        <div\n            style={{\n                width: '10px',\n                height: '10px',\n                backgroundColor: selected ? '#00c19f' : undefined,\n                border: `1px solid ${selected ? '#00c19f' : '#757575'}`,\n                borderRadius: '50%',\n                marginRight: '7px',\n            }}\n        >\n            <Hover style={{ backgroundColor: selected ? '#00c19f' : '#757575' }} />\n        </div>\n    </button>\n);\n\ntype ButtonType = { direction: -1 | 1; disabled: boolean; onClick: MouseEventHandler };\nconst ChevronButton = ({ direction, disabled, onClick }: ButtonType) => (\n    <button\n        type=\"button\"\n        style={{\n            backgroundColor: 'inherit',\n            border: 'none',\n            color: disabled ? '#e0e0e0' : '#757575',\n            cursor: disabled ? 'default' : 'pointer',\n        }}\n        disabled={disabled}\n        onClick={onClick}\n    >\n        <Hover style={disabled ? undefined : { color: '#212121' }}>\n            {direction === -1 ? <LeftArrow /> : <RightArrow />}\n        </Hover>\n    </button>\n);\n\ntype Props = { stepIndex: number; changeStep: (index: number) => void; allSteps: number[] };\nconst PageSelector = ({ stepIndex, changeStep, allSteps }: Props) => (\n    <div\n        style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n        }}\n    >\n        <ChevronButton\n            direction={-1}\n            disabled={allSteps[0] === stepIndex}\n            onClick={() => changeStep(stepIndex - 1)}\n        />\n        <div\n            style={{\n                display: 'flex',\n                maxWidth: '200px',\n                flexWrap: 'wrap',\n                alignItems: 'center',\n            }}\n        >\n            {allSteps.map((x, index) => (\n                <DotButton\n                    key={x}\n                    onClick={() => changeStep(index)}\n                    selected={index === stepIndex}\n                />\n            ))}\n        </div>\n        <ChevronButton\n            direction={1}\n            disabled={allSteps[allSteps.length - 1] === stepIndex}\n            onClick={() => changeStep(stepIndex + 1)}\n        />\n    </div>\n);\n\nexport default React.memo(PageSelector);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__798__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n"],"names":["root","factory","exports","module","require","define","amd","global","__WEBPACK_EXTERNAL_MODULE__798__","memo","close","type","onClick","style","backgroundColor","border","color","cursor","position","top","right","Close","children","hidden","setHidden","useState","useEffect","setTimeout","transition","opacity","Arrow","x","y","rotation","scrollToElement","ref","useRef","undefined","height","width","bottom","current","getBoundingClientRect","zIndex","left","pointerEvents","id","fill","transform","d","mask","boundaries","window","innerHeight","innerWidth","borderRadius","boxShadow","isHovering","setIsHovering","onMouseEnter","onMouseLeave","styles","display","fontSize","flexShrink","userSelect","Icon","path","LeftArrow","RightArrow","modalHeight","result","clientWidth","docWidth","clientHeight","docHeight","document","documentElement","leftMargin","rightMargin","topMargin","bottomMargin","horizontalAlign","vertialAlign","stepIndex","changeStep","allSteps","renderedContent","content","useMemo","body","maxWidth","minHeight","overflow","padding","selectedIndex","alignItems","justifyContent","open","onClose","steps","openAt","currentIndex","setCurrentIndex","map","_","i","useCallback","event","stopPropagation","index","scrollOptions","behavior","block","Step","element","setBoundaries","adjustBoundaries","scrollIntoView","addEventListener","interval","setInterval","dispatchEvent","Event","timeout","clearInterval","clearTimeout","removeEventListener","selector","Content","props","failedCount","setFailedCount","step","$","query","querySelector","default","DotButton","selected","marginRight","ChevronButton","direction","disabled","flexWrap","key","length","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}